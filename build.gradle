plugins {
    id 'java'
    id("io.github.goooler.shadow") version "8.1.8"
}

shadowJar {
    relocate("dev.triumphteam.gui", "me.xiaojibazhanshi.customarrows.guis")
    relocate("net.kyori.adventure", "me.xiaojibazhanshi.net.kyori")
}

build {
    dependsOn(shadowJar)
}

group = 'me.xiaojibazhanshi'
version = '1'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly("org.spigotmc:spigot-api:1.21-R0.1-SNAPSHOT")
    implementation("dev.triumphteam:triumph-gui:3.1.10")
    compileOnly("net.kyori:adventure-text-serializer-plain:4.17.0")
    compileOnly('org.projectlombok:lombok:1.18.34')
    annotationProcessor('org.projectlombok:lombok:1.18.34')
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
